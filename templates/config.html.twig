{#
 # -------------------------------------------------------------------------
 # MoreOptions plugin for GLPI
 # -------------------------------------------------------------------------
 #
 # MIT License
 #
 # Permission is hereby granted, free of charge, to any person obtaining a copy
 # of this software and associated documentation files (the "Software"), to deal
 # in the Software without restriction, including without limitation the rights
 # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 # copies of the Software, and to permit persons to whom the Software is
 # furnished to do so, subject to the following conditions:
 #
 # The above copyright notice and this permission notice shall be included in all
 # copies or substantial portions of the Software.
 #
 # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 # SOFTWARE.
 # -------------------------------------------------------------------------
 # @copyright Copyright (C) 2025 by the MoreOptions plugin team.
 # @copyright Copyright (C) 2022-2024 by Cancel Send plugin team.
 # @license   MIT https://opensource.org/licenses/mit-license.php
 # @license   GPLv3 https://www.gnu.org/licenses/gpl-3.0.html
 # @link      https://github.com/pluginsGLPI/moreoptions
 # @link      https://gitlab.teclib.com/glpi-network/moreoptions/
 # -------------------------------------------------------------------------
 #}

{% import 'components/form/fields_macros.html.twig' as fields %}
{% import 'components/alerts_macros.html.twig' as alerts %}

{# Layout options for fields #}
{% set field_options = {'label_class': 'col-8', 'input_class': 'col-4', 'field_class': 'col-6', 'full_width': false} %}

<div class="asset">
    <form action="{{ path('plugins/moreoptions/front/config.form.php') }}" method="post">
    {% set item_has_pictures = item.hasItemtypeOrModelPictures() %}

    <div class="card-body d-flex flex-wrap">
        <div class="col-12 col-xxl-{{ item_has_pictures ? '9' : '12' }} flex-column">
            <div class="d-flex flex-row flex-wrap flex-xl-nowrap">
                <div class="row flex-row align-items-start flex-grow-1">
                <div class="row flex-row">

                        <div class="hr-text">
                            <i class="fa-2x ti ti-alert-circle"></i>
                            <span>{{ __('Itil items') }}</span>
                        </div>

                        {{ fields.checkboxField(
                            'is_active',
                            item.fields['is_active'],
                            __('Active on this entity', 'moreoptions')
                        ) }}

                        {% if item.fields['entities_id'] != 0 %}
                            {{ fields.checkboxField(
                                'use_parent_entity',
                                item.fields['use_parent_entity'],
                                __('Use parent entity configuration', 'moreoptions'),
                                {'helper': __('When enabled, this entity will inherit configuration from its parent entity', 'moreoptions')}
                            ) }}

                            {% if parent_entity_info %}
                                {{ alerts.alert_info(__('Configuration is inherited from parent entity: %s', 'moreoptions')|format(parent_entity_info)) }}
                            {% endif %}
                        {% endif %}

                        <div class="moreoptions-config">
                            <table class="table table-hover border card-table" id="config_table">
                                <thead>
                                    <tr>
                                        <th> &nbsp; </th>
                                        <th>{{ __('Ticket') }}</th>
                                        <th>{{ __('Change') }}</th>
                                        <th>{{ __('Problem') }}</th>
                                        <th>{{ __('All') }}</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>{{ __('Take the group of associated item', 'moreoptions') }}</td>
                                        <td><input type="checkbox" name="take_item_group_ticket" class="form-check-input" id="take_item_group_ticket" {{ item.fields['take_item_group_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="take_item_group_change" class="form-check-input" id="take_item_group_change" {{ item.fields['take_item_group_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="take_item_group_problem" class="form-check-input" id="take_item_group_problem" {{ item.fields['take_item_group_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="take_item_group_all" class="form-check-input" id="take_item_group_all" {{ (item.fields['take_item_group_ticket'] and item.fields['take_item_group_change'] and item.fields['take_item_group_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Take the requester group', 'moreoptions') }}</td>
                                        <td>
                                            {{ fields.dropdownArrayField(
                                                'take_requester_group_ticket',
                                                item.fields['take_requester_group_ticket'],
                                                dropdown_options,
                                                '',
                                                field_options|merge({'field_class': 'col-12', 'no_label': true})
                                            ) }}
                                        </td>
                                        <td>
                                            {{ fields.dropdownArrayField(
                                                'take_requester_group_change',
                                                item.fields['take_requester_group_change'],
                                                dropdown_options,
                                                '',
                                                field_options|merge({'field_class': 'col-12', 'no_label': true})
                                            ) }}
                                        </td>
                                        <td>
                                            {{ fields.dropdownArrayField(
                                                'take_requester_group_problem',
                                                item.fields['take_requester_group_problem'],
                                                dropdown_options,
                                                '',
                                                field_options|merge({'field_class': 'col-12', 'no_label': true})
                                            ) }}
                                        </td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Take the technician group', 'moreoptions') }}</td>
                                        <td>
                                            {{ fields.dropdownArrayField(
                                                'take_technician_group_ticket',
                                                item.fields['take_technician_group_ticket'],
                                                dropdown_options,
                                                '',
                                                field_options|merge({'field_class': 'col-12', 'no_label': true})
                                            ) }}
                                        </td>
                                        <td>
                                            {{ fields.dropdownArrayField(
                                                'take_technician_group_change',
                                                item.fields['take_technician_group_change'],
                                                dropdown_options,
                                                '',
                                                field_options|merge({'field_class': 'col-12', 'no_label': true})
                                            ) }}
                                        </td>
                                        <td>
                                            {{ fields.dropdownArrayField(
                                                'take_technician_group_problem',
                                                item.fields['take_technician_group_problem'],
                                                dropdown_options,
                                                '',
                                                field_options|merge({'field_class': 'col-12', 'no_label': true})
                                            ) }}
                                        </td>
                                        <td></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Prevent closure with tasks in To Do status', 'moreoptions') }}</td>
                                        <td><input type="checkbox" name="prevent_closure_ticket" class="form-check-input" id="prevent_closure_ticket" {{ item.fields['prevent_closure_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="prevent_closure_change" class="form-check-input" id="prevent_closure_change" {{ item.fields['prevent_closure_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="prevent_closure_problem" class="form-check-input" id="prevent_closure_problem" {{ item.fields['prevent_closure_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="prevent_closure_all" class="form-check-input" id="prevent_closure_all" {{ (item.fields['prevent_closure_ticket'] and item.fields['prevent_closure_change'] and item.fields['prevent_closure_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Assign technical manager when changing category', 'moreoptions') }}</td>
                                        <td><input type="checkbox" name="assign_technical_manager_when_changing_category_ticket" class="form-check-input" {{ item.fields['assign_technical_manager_when_changing_category_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="assign_technical_manager_when_changing_category_change" class="form-check-input" {{ item.fields['assign_technical_manager_when_changing_category_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="assign_technical_manager_when_changing_category_problem" class="form-check-input" {{ item.fields['assign_technical_manager_when_changing_category_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="assign_technical_manager_when_changing_category_all" class="form-check-input" {{ (item.fields['assign_technical_manager_when_changing_category_ticket'] and item.fields['assign_technical_manager_when_changing_category_change'] and item.fields['assign_technical_manager_when_changing_category_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Assign technical group when changing category', 'moreoptions') }}</td>
                                        <td><input type="checkbox" name="assign_technical_group_when_changing_category_ticket" class="form-check-input" {{ item.fields['assign_technical_group_when_changing_category_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="assign_technical_group_when_changing_category_change" class="form-check-input" {{ item.fields['assign_technical_group_when_changing_category_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="assign_technical_group_when_changing_category_problem" class="form-check-input" {{ item.fields['assign_technical_group_when_changing_category_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="assign_technical_group_when_changing_category_all" class="form-check-input" {{ (item.fields['assign_technical_group_when_changing_category_ticket'] and item.fields['assign_technical_group_when_changing_category_change'] and item.fields['assign_technical_group_when_changing_category_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                </tbody>
                            </table>

                            <div class="hr-text">
                                <i class="fa-2x ti ti-help-circle"></i>
                                <span>{{ __('Solve and Close Items') }}</span>
                            </div>

                            {{ alerts.alert_danger(__('The options below relate to the mandatory fields for resolving and closing ITIL items.', 'moreoptions')) }}

                            <table class="table table-hover border card-table" id="solutions_table">
                                <thead>
                                    <tr>
                                        <th> &nbsp; </th>
                                        <th>{{ __('Ticket') }}</th>
                                        <th>{{ __('Change') }}</th>
                                        <th>{{ __('Problem') }}</th>
                                        <th>{{ __('All') }}</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>{{ __('Technician') }}</td>
                                        <td><input type="checkbox" name="require_technician_to_close_ticket" class="form-check-input require-technician" {{ item.fields['require_technician_to_close_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_technician_to_close_change" class="form-check-input require-technician" {{ item.fields['require_technician_to_close_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_technician_to_close_problem" class="form-check-input require-technician" {{ item.fields['require_technician_to_close_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_technician_to_close_all" class="form-check-input" id="require_technician_to_close_all" {{ (item.fields['require_technician_to_close_ticket'] and item.fields['require_technician_to_close_change'] and item.fields['require_technician_to_close_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Technicians group') }}</td>
                                        <td><input type="checkbox" name="require_technicians_group_to_close_ticket" class="form-check-input require-group" {{ item.fields['require_technicians_group_to_close_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_technicians_group_to_close_change" class="form-check-input require-group" {{ item.fields['require_technicians_group_to_close_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_technicians_group_to_close_problem" class="form-check-input require-group" {{ item.fields['require_technicians_group_to_close_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_technicians_group_to_close_all" class="form-check-input" id="require_technicians_group_to_close_all" {{ (item.fields['require_technicians_group_to_close_ticket'] and item.fields['require_technicians_group_to_close_change'] and item.fields['require_technicians_group_to_close_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Category') }}</td>
                                        <td><input type="checkbox" name="require_category_to_close_ticket" class="form-check-input require-category" {{ item.fields['require_category_to_close_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_category_to_close_change" class="form-check-input require-category" {{ item.fields['require_category_to_close_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_category_to_close_problem" class="form-check-input require-category" {{ item.fields['require_category_to_close_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_category_to_close_all" class="form-check-input" id="require_category_to_close_all" {{ (item.fields['require_category_to_close_ticket'] and item.fields['require_category_to_close_change'] and item.fields['require_category_to_close_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Location') }}</td>
                                        <td><input type="checkbox" name="require_location_to_close_ticket" class="form-check-input require-location" {{ item.fields['require_location_to_close_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_location_to_close_change" class="form-check-input require-location" {{ item.fields['require_location_to_close_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_location_to_close_problem" class="form-check-input require-location" {{ item.fields['require_location_to_close_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_location_to_close_all" class="form-check-input" id="require_location_to_close_all" {{ (item.fields['require_location_to_close_ticket'] and item.fields['require_location_to_close_change'] and item.fields['require_location_to_close_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                    <tr>
                                        <td>{{ __('Solution') }}</td>
                                        <td><input type="checkbox" name="require_solution_to_close_ticket" class="form-check-input require-solution" {{ item.fields['require_solution_to_close_ticket'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_solution_to_close_change" class="form-check-input require-solution" {{ item.fields['require_solution_to_close_change'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_solution_to_close_problem" class="form-check-input require-solution" {{ item.fields['require_solution_to_close_problem'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="require_solution_to_close_all" class="form-check-input" id="require_solution_to_close_all" {{ (item.fields['require_solution_to_close_ticket'] and item.fields['require_solution_to_close_change'] and item.fields['require_solution_to_close_problem']) ? 'checked' : '' }} /></td>
                                    </tr>
                                </tbody>
                            </table>

                            <div class="hr-text">
                                <i class="fa-2x ti ti-checklist"></i>
                                <span>{{ __('Tasks') }}</span>
                            </div>

                            {{ alerts.alert_danger(__('The options below relate to the mandatory fields for creating a task.', 'moreoptions')) }}

                            <table class="table table-hover border card-table" id="tasks_table">
                                <thead>
                                    <tr>
                                        <th>{{ __('Category') }}</th>
                                        <th>{{ __('Duration') }}</th>
                                        <th>{{ __('User') }}</th>
                                        <th>{{ __('Group') }}</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td><input type="checkbox" name="mandatory_task_category" class="form-check-input" {{ item.fields['mandatory_task_category'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="mandatory_task_duration" class="form-check-input" {{ item.fields['mandatory_task_duration'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="mandatory_task_user" class="form-check-input" {{ item.fields['mandatory_task_user'] ? 'checked' : '' }} /></td>
                                        <td><input type="checkbox" name="mandatory_task_group" class="form-check-input" {{ item.fields['mandatory_task_group'] ? 'checked' : '' }} /></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {{ include('components/form/buttons.html.twig') }}
    </form>
</div>

<script>
    $(document).ready(function() {
        // Handle use parent entity option
        function toggleConfigOptions() {
            const useParentEntity = document.querySelector('input[name="use_parent_entity"]');
            const configDiv = document.querySelector('.moreoptions-config');
            
            if (useParentEntity && configDiv) {
                if (useParentEntity.checked) {
                    configDiv.style.display = 'none';
                } else {
                    configDiv.style.display = 'block';
                }
            }
        }

        // Initialize on load
        toggleConfigOptions();

        // Listen for changes
        const useParentEntityCheckbox = document.querySelector('input[name="use_parent_entity"]');
        if (useParentEntityCheckbox) {
            useParentEntityCheckbox.addEventListener('change', toggleConfigOptions);
        }

        // Take item group all functionality
        const takeItemGroupAll = document.querySelector('input[id="take_item_group_all"]');
        const takeItemGroupCheckboxes = document.querySelectorAll('input[type="checkbox"][id*="take_item_group"]');
        takeItemGroupAll.addEventListener('change', () => {
            if (takeItemGroupAll.checked === true) {
                takeItemGroupCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                takeItemGroupCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })

        // Prevent closure all functionality
        const preventClosureAll = document.querySelector('input[id="prevent_closure_all"]');
        const preventClosureCheckboxes = document.querySelectorAll('input[type="checkbox"][id*="prevent_closure"]');
        preventClosureAll.addEventListener('change', () => {
            if (preventClosureAll.checked === true) {
                preventClosureCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                preventClosureCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })

        // Assign technical manager when changing category all functionality
        const assignTechManagerAll = document.querySelector('input[name="assign_technical_manager_when_changing_category_all"]');
        const assignTechManagerCheckboxes = document.querySelectorAll('input[type="checkbox"][name*="assign_technical_manager_when_changing_category_"]');
        assignTechManagerAll.addEventListener('change', () => {
            if (assignTechManagerAll.checked === true) {
                assignTechManagerCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                assignTechManagerCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })

        // Assign technical group when changing category all functionality
        const assignTechGroupAll = document.querySelector('input[name="assign_technical_group_when_changing_category_all"]');
        const assignTechGroupCheckboxes = document.querySelectorAll('input[type="checkbox"][name*="assign_technical_group_when_changing_category_"]');
        assignTechGroupAll.addEventListener('change', () => {
            if (assignTechGroupAll.checked === true) {
                assignTechGroupCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                assignTechGroupCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })

        // Require fields to close - Technician all functionality
        const requireTechnicianAll = document.querySelector('input[id="require_technician_to_close_all"]');
        const requireTechnicianCheckboxes = document.querySelectorAll('input.require-technician');
        requireTechnicianAll.addEventListener('change', () => {
            if (requireTechnicianAll.checked === true) {
                requireTechnicianCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                requireTechnicianCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })

        // Require fields to close - Technicians group all functionality
        const requireGroupAll = document.querySelector('input[id="require_technicians_group_to_close_all"]');
        const requireGroupCheckboxes = document.querySelectorAll('input.require-group');
        requireGroupAll.addEventListener('change', () => {
            if (requireGroupAll.checked === true) {
                requireGroupCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                requireGroupCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })

        // Require fields to close - Category all functionality
        const requireCategoryAll = document.querySelector('input[id="require_category_to_close_all"]');
        const requireCategoryCheckboxes = document.querySelectorAll('input.require-category');
        requireCategoryAll.addEventListener('change', () => {
            if (requireCategoryAll.checked === true) {
                requireCategoryCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                requireCategoryCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })

        // Require fields to close - Location all functionality
        const requireLocationAll = document.querySelector('input[id="require_location_to_close_all"]');
        const requireLocationCheckboxes = document.querySelectorAll('input.require-location');
        requireLocationAll.addEventListener('change', () => {
            if (requireLocationAll.checked === true) {
                requireLocationCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                requireLocationCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })

        // Require fields to close - Solution all functionality
        const requireSolutionAll = document.querySelector('input[id="require_solution_to_close_all"]');
        const requireSolutionCheckboxes = document.querySelectorAll('input.require-solution');
        requireSolutionAll.addEventListener('change', () => {
            if (requireSolutionAll.checked === true) {
                requireSolutionCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = true;
                })
            } else {
                requireSolutionCheckboxes.forEach(function(checkbox) {
                    checkbox.checked = false;
                })
            }
        })
    });
</script>